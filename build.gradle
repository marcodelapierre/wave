import java.time.OffsetDateTime
import java.time.format.DateTimeFormatter

plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.2.0"
    id "com.google.cloud.tools.jib" version "3.1.4"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation")
    implementation "org.codehaus.groovy:groovy-json"
    compileOnly("io.micronaut:micronaut-http-validation")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("io.netty:netty-tcnative-boringssl-static:2.0.0.Final")
    testImplementation "org.apache.commons:commons-compress:1.21"
}


application {
    mainClass.set("io.seqera.App")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}


//
// Build container image with JIB
// https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin
//
jib.from.image = 'amazoncorretto:11.0.14'
jib.to.image = "tower-reg:$version"
jib.container.creationTime = "${OffsetDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME)}"
jib.container.filesModificationTime = "${OffsetDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME)}"
jib.container.ports = ['9090']
jib.container.entrypoint = '/bin/sh'
jib.container.args = ['/reg.sh']  // copied from `src/main/jib` directory
jib.extraDirectories.permissions = ['/reg.sh': '755']
